import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import '../add_patient_screen.dart';
import '../search_screen.dart';
import '../theme/app_theme.dart';
import 'package:go_router/go_router.dart';
// Riverpod-–ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ (–¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞)
import 'package:flutter_riverpod/flutter_riverpod.dart';
import '../../../presentation/dashboard/widgets/patient_counts_widget.dart';
import '../../../presentation/dashboard/widgets/treatment_stats_widget.dart';
// –ù–µ–æ–º–æ—Ä—Ñ–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–∏–∑–∞–π–Ω‚Äë—Å–∏—Å—Ç–µ–º—ã
import '../design_system/design_system_screen.dart' show NeoCard, NeoButton, NeoTabBar, DesignTokens;

class NewDashboardScreen extends StatefulWidget {
  const NewDashboardScreen({Key? key}) : super(key: key);

  @override
  _NewDashboardScreenState createState() => _NewDashboardScreenState();
}

class _NewDashboardScreenState extends State<NewDashboardScreen> with SingleTickerProviderStateMixin {
  late AnimationController _animationController;
  late Animation<double> _fadeAnimation;
  late Animation<double> _slideAnimation;

  @override
  void initState() {
    super.initState();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏
    _animationController = AnimationController(
      duration: Duration(milliseconds: 1500),
      vsync: this,
    );

    _fadeAnimation = Tween<double>(begin: 0.0, end: 1.0).animate(
      CurvedAnimation(
        parent: _animationController,
        curve: Interval(0.0, 0.5, curve: Curves.easeOut),
      ),
    );

    _slideAnimation = Tween<double>(begin: 50.0, end: 0.0).animate(
      CurvedAnimation(
        parent: _animationController,
        curve: Interval(0.2, 0.8, curve: Curves.easeOut),
      ),
    );

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    _animationController.forward();
  }

  @override
  void dispose() {
    _animationController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    // –ù–æ–≤—ã–π —Ñ–æ–Ω –ø–æ–¥ –Ω–µ–æ–º–æ—Ä—Ñ–∏–∑–º
    return Scaffold(
      backgroundColor: DesignTokens.background,
      body: SafeArea(
        child: Padding(
          padding: const EdgeInsets.all(12.0),
          child: _buildNeoLayout(context),
        ),
      ),
    );
  }

  // –ù–æ–≤—ã–π –Ω–µ–æ–º–æ—Ä—Ñ–Ω—ã–π –º–∞–∫–µ—Ç –¥–∞—à–±–æ—Ä–¥–∞
  Widget _buildNeoLayout(BuildContext context) {
    return Row(
      children: [
        // –õ–µ–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –º–µ—Ç—Ä–∏–∫–∏, –±—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        Expanded(
          flex: 1,
          child: Column(
            children: [
              // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ/—à–∞–ø–∫–∞
              AnimatedBuilder(
                animation: _fadeAnimation,
                builder: (context, child) {
                  return Opacity(
                    opacity: _fadeAnimation.value,
                    child: Transform.translate(
                      offset: Offset(0, -20 * (1 - _fadeAnimation.value)),
                      child: child,
                    ),
                  );
                },
                child: NeoCard(
                  child: Row(
                    children: [
                      // –ê–≤–∞—Ç–∞—Ä
                      const Padding(
                        padding: EdgeInsets.only(right: 16),
                        child: CircleAvatar(
                          radius: 24,
                          backgroundColor: Colors.white,
                          child: Text('üë®‚Äç‚öïÔ∏è', style: TextStyle(fontSize: 20)),
                        ),
                      ),
                      Expanded(
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: const [
                            Text('–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –¥–æ–∫—Ç–æ—Ä!', style: DesignTokens.h3),
                            SizedBox(height: 4),
                            Text('–í–∞—à–µ —Ä–∞–±–æ—á–µ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ', style: DesignTokens.small),
                          ],
                        ),
                      ),
                      NeoButton(
                        label: '–î–æ–±–∞–≤–∏—Ç—å',
                        onPressed: () => context.push('/add'),
                        primary: true,
                      ),
                    ],
                  ),
                ),
              ),
              const SizedBox(height: 12),

              // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ—Ü–µ–¥—É—Ä (–≤–µ—Ä—Ö–Ω—è—è –æ—Å–Ω–æ–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å)
              Expanded(
                flex: 2,
                child: AnimatedBuilder(
                  animation: _fadeAnimation,
                  builder: (context, child) {
                    return Opacity(
                      opacity: _fadeAnimation.value,
                      child: Transform.translate(
                        offset: Offset(0, 20 * (1 - _fadeAnimation.value)),
                        child: child,
                      ),
                    );
                  },
                  child: NeoCard(
                    child: _buildMainTopPanel(context),
                  ),
                ),
              ),
              const SizedBox(height: 12),

              // –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è 2x2
              AnimatedBuilder(
                animation: _fadeAnimation,
                builder: (context, child) {
                  return Opacity(
                    opacity: _fadeAnimation.value,
                    child: Transform.translate(
                      offset: Offset(0, 30 * (1 - _fadeAnimation.value)),
                      child: child,
                    ),
                  );
                },
                child: NeoCard(
                  child: GridView(
                    shrinkWrap: true,
                    physics: const NeverScrollableScrollPhysics(),
                    gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
                      crossAxisCount: 2,
                      mainAxisSpacing: 10,
                      crossAxisSpacing: 10,
                      childAspectRatio: 3.2,
                    ),
                    children: [
                      NeoButton(label: '–ó–∞–ø–∏—Å—å', onPressed: () {}),
                      NeoButton(label: '–ü–æ–∏—Å–∫', onPressed: () => context.push('/search')),
                      NeoButton(label: '–ü–∞—Ü–∏–µ–Ω—Ç—ã', onPressed: () => context.push('/search')),
                      NeoButton(label: '–û—Ç—á—ë—Ç—ã', onPressed: () => context.push('/reports')),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),

        const SizedBox(width: 12),

        // –ü—Ä–∞–≤–∞—è –∫–æ–ª–æ–Ω–∫–∞: –º–∏–Ω–∏‚Äë–ø–∞–Ω–µ–ª–∏ –∏ —Å—á—ë—Ç—á–∏–∫–∏
        SizedBox(
          width: 320,
          child: Column(
            children: [
              // –í–µ—Ä—Ö–Ω—è—è –ø—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å (–∑–∞–≥–ª—É—à–∫–∞ –≤ –Ω–µ–æ–º–æ—Ä—Ñ–Ω–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ)
              Expanded(
                flex: 1,
                child: AnimatedBuilder(
                  animation: _fadeAnimation,
                  builder: (context, child) {
                    return Opacity(
                      opacity: _fadeAnimation.value,
                      child: Transform.translate(
                        offset: Offset(20 * (1 - _fadeAnimation.value), 0),
                        child: child,
                      ),
                    );
                  },
                  child: NeoCard(
                    child: _buildRightTopPanel(context),
                  ),
                ),
              ),
              const SizedBox(height: 12),

              // –ù–∏–∂–Ω—è—è –ø—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å: —Å—á—ë—Ç—á–∏–∫–∏ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ (–Ω–∞ Riverpod)
              Expanded(
                flex: 2,
                child: AnimatedBuilder(
                  animation: _fadeAnimation,
                  builder: (context, child) {
                    return Opacity(
                      opacity: _fadeAnimation.value,
                      child: Transform.translate(
                        offset: Offset(30 * (1 - _fadeAnimation.value), 0),
                        child: child,
                      ),
                    );
                  },
                  child: const NeoCard(
                    child: PatientCountsWidget(),
                  ),
                ),
              ),
            ],
          ),
        ),
      ],
    );
  }

  // –ü–æ—Ä—Ç—Ä–µ—Ç–Ω—ã–π –º–∞–∫–µ—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ç–∞–±–æ–≤ –¥–ª—è –ª—É—á—à–µ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
  Widget _buildPortraitLayout(BuildContext context) {
    return Column(
      children: [
        // –í–µ—Ä—Ö–Ω—è—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å
        _buildPortraitHeader(context),
        
        SizedBox(height: 16),
        
        // –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        _buildPortraitMetrics(context),
        
        SizedBox(height: 16),
        
        // –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å —á–µ—Ä–µ–∑ —Ç–∞–±—ã
        Expanded(
          child: DefaultTabController(
            length: 2,
            child: Column(
              children: [
                // –ü–∞–Ω–µ–ª—å —Ç–∞–±–æ–≤
                Container(
                  decoration: BoxDecoration(
                    color: Color(0xFF2A2A2A),
                    borderRadius: BorderRadius.circular(12),
                    boxShadow: [
                      BoxShadow(
                        color: Colors.black.withOpacity(0.3),
                        blurRadius: 8,
                        spreadRadius: 0,
                        offset: Offset(2, 2),
                      ),
                    ],
                  ),
                  child: TabBar(
                    indicatorColor: Color(0xFF3949AB),
                    indicatorWeight: 3,
                    indicatorSize: TabBarIndicatorSize.tab,
                    labelColor: Colors.white,
                    unselectedLabelColor: Colors.white60,
                    tabs: [
                      Tab(text: 'Main', icon: Icon(Icons.dashboard)),
                      Tab(text: 'Reports', icon: Icon(Icons.bar_chart)),
                    ],
                  ),
                ),
                
                SizedBox(height: 16),
                
                // –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ç–∞–±–æ–≤
                Expanded(
                  child: TabBarView(
                    children: [
                      // –ü–µ—Ä–≤—ã–π —Ç–∞–± - –æ—Å–Ω–æ–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏
                      SingleChildScrollView(
                        child: Column(
                          children: [
                            _buildMainTopPanel(context, isPortrait: true),
                            SizedBox(height: 16),
                            _buildMainBottomPanel(context, isPortrait: true),
                          ],
                        ),
                      ),
                      
                      // –í—Ç–æ—Ä–æ–π —Ç–∞–± - –æ—Ç—á–µ—Ç—ã (–ø—Ä–∞–≤—ã–µ –ø–∞–Ω–µ–ª–∏)
                      SingleChildScrollView(
                        child: Column(
                          children: [
                            _buildRightTopPanel(context, isPortrait: true),
                            SizedBox(height: 16),
                            _buildRightBottomPanel(context, isPortrait: true),
                          ],
                        ),
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ),
        ),
      ],
    );
  }

  // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –≤–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å –¥–ª—è –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
  Widget _buildPortraitHeader(BuildContext context) {
    return AnimatedBuilder(
      animation: _fadeAnimation,
      builder: (context, child) {
        return Opacity(
          opacity: _fadeAnimation.value,
          child: Transform.translate(
            offset: Offset(0, -20 * (1 - _fadeAnimation.value)),
            child: child,
          ),
        );
      },
      child: Container(
        height: 70,
        padding: EdgeInsets.symmetric(horizontal: 16),
        decoration: BoxDecoration(
          color: Color(0xFF2A2A2A),
          borderRadius: BorderRadius.circular(12),
          boxShadow: [
            BoxShadow(
              color: Colors.black.withOpacity(0.5),
              blurRadius: 10,
              spreadRadius: 0,
              offset: Offset(4, 4),
            ),
          ],
          border: Border.all(
            color: Colors.white.withOpacity(0.2),
            width: 1.0,
          ),
        ),
        child: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Text(
              'Clinic Dashboard',
              style: TextStyle(
                color: Colors.white,
                fontSize: 18,
                fontWeight: FontWeight.bold,
              ),
            ),
            Row(
              children: [
                _buildPortraitActionButton('Add', Icons.person_add_alt, () {
                  Navigator.push(context, MaterialPageRoute(builder: (_) => AddPatientScreen()));
                }),
                SizedBox(width: 8),
                _buildPortraitActionButton('Search', Icons.search, () {
                  Navigator.push(context, MaterialPageRoute(builder: (_) => SearchScreen()));
                }),
              ],
            ),
          ],
        ),
      ),
    );
  }

  // –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
  Widget _buildPortraitMetrics(BuildContext context) {
    return AnimatedBuilder(
      animation: _fadeAnimation,
      builder: (context, child) {
        return Opacity(
          opacity: _fadeAnimation.value,
          child: Transform.translate(
            offset: Offset(0, 20 * (1 - _fadeAnimation.value)),
            child: child,
          ),
        );
      },
      child: Container(
        width: double.infinity,
        padding: EdgeInsets.all(16),
        decoration: BoxDecoration(
          color: Color(0xFF2A2A2A),
          borderRadius: BorderRadius.circular(12),
          boxShadow: [
            BoxShadow(
              color: Colors.black.withOpacity(0.5),
              blurRadius: 10,
              spreadRadius: 0,
              offset: Offset(4, 4),
            ),
          ],
          border: Border.all(
            color: Colors.white.withOpacity(0.2),
            width: 1.0,
          ),
        ),
        child: Column(
          children: [
            Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Text(
                      '84',
                      style: TextStyle(
                        fontSize: 36,
                        fontWeight: FontWeight.bold,
                        color: Colors.white,
                      ),
                    ),
                    Text(
                      'implants',
                      style: TextStyle(
                        fontSize: 14,
                        color: Colors.white70,
                      ),
                    ),
                  ],
                ),
                Container(
                  padding: EdgeInsets.symmetric(horizontal: 12, vertical: 6),
                  decoration: BoxDecoration(
                    color: Colors.white10,
                    borderRadius: BorderRadius.circular(20),
                  ),
                  child: Text(
                    'This month',
                    style: TextStyle(color: Colors.white60),
                  ),
                ),
              ],
            ),
            SizedBox(height: 16),
            // Datetime
            Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Text(
                  DateFormat('dd MMMM yyyy').format(DateTime.now()),
                  style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
                ),
                SizedBox(width: 10),
                Text(
                  DateFormat('EEEE').format(DateTime.now()),
                  style: TextStyle(color: Colors.white54),
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }

  // –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –ø–æ—Ä—Ç—Ä–µ—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
  Widget _buildPortraitActionButton(String title, IconData icon, VoidCallback onPressed) {
    return Material(
      color: Colors.transparent,
      child: InkWell(
        borderRadius: BorderRadius.circular(8),
        onTap: onPressed,
        child: Container(
          padding: EdgeInsets.symmetric(horizontal: 12, vertical: 8),
          decoration: BoxDecoration(
            color: Color(0xFF3949AB),
            borderRadius: BorderRadius.circular(8),
          ),
          child: Row(
            children: [
              Icon(icon, color: Colors.white, size: 18),
              SizedBox(width: 6),
              Text(title, style: TextStyle(color: Colors.white)),
            ],
          ),
        ),
      ),
    );
  }

  // –£–∑–∫–∞—è –ª–µ–≤–∞—è –ø–∞–Ω–µ–ª—å –º–µ–Ω—é - –í–ï–†–°–ò–Ø –° –ü–û–õ–ù–û–ô –í–´–°–û–¢–û–ô –ò –ö–û–ú–ü–ê–ö–¢–ù–´–ú –ö–û–ù–¢–ï–ù–¢–û–ú
  Widget _buildSidebarPanel(BuildContext context) {
    final now = DateTime.now();
    final dateFormatter = DateFormat('dd MMMM yyyy'); // Format for date
    final dayFormatter = DateFormat('EEEE'); // Format for day name

    return Container(
      width: 300,
      padding: EdgeInsets.symmetric(vertical: 32, horizontal: 16),
      decoration: BoxDecoration(
        color: Color(0xFF2A2A2A),
        borderRadius: BorderRadius.circular(12),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.5),
            blurRadius: 10,
            spreadRadius: 0,
            offset: Offset(4, 4),
          ),
        ],
        border: Border.all(
          color: Colors.white.withOpacity(0.2),
          width: 1.0,
        ),
      ),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        children: [
          // –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å (–º–µ—Ç—Ä–∏–∫–∞ –∏ –∫–Ω–æ–ø–∫–∏) - –±—É–¥–µ—Ç —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞
          Expanded(
            child: Center(
              child: Column(
                mainAxisSize: MainAxisSize.min, // –°–∂–∏–º–∞–µ—Ç –∫–æ–ª–æ–Ω–∫—É –ø–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É
                children: [
                  // Metric Section
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.center,
                    children: [
                      Text(
                        '84',
                        style: TextStyle(
                          fontSize: 48,
                          fontWeight: FontWeight.bold,
                          color: Colors.white,
                        ),
                      ),
                      Text(
                        'implants',
                        style: TextStyle(
                          fontSize: 18,
                          color: Colors.white70,
                        ),
                      ),
                      SizedBox(height: 8),
                      Container(
                        padding: EdgeInsets.symmetric(horizontal: 12, vertical: 6),
                        decoration: BoxDecoration(
                          color: Colors.white10,
                          borderRadius: BorderRadius.circular(20),
                        ),
                        child: Text(
                          'This month',
                          style: TextStyle(color: Colors.white60),
                        ),
                      ),
                    ],
                  ),

                  SizedBox(height: 32),

                  // Divider and Buttons Section
                  Column(
                    children: [
                      Padding(
                        padding: const EdgeInsets.symmetric(vertical: 16.0),
                        child: Divider(color: Colors.white12, height: 1, thickness: 0.5),
                      ),
                      _buildActionButton('Add Patient', Icons.person_add_alt, () {
                        Navigator.push(context, MaterialPageRoute(builder: (_) => AddPatientScreen()));
                      }),
                      SizedBox(height: 16),
                      _buildActionButton('Search', Icons.search, () {
                        Navigator.push(context, MaterialPageRoute(builder: (_) => SearchScreen()));
                      }),
                    ],
                  ),
                ],
              ),
            ),
          ),

          // Date Section - –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤–Ω–∏–∑—É
          Column(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: [
              Text(
                dateFormatter.format(now), // Use formatted date
                style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
              ),
              Text(
                dayFormatter.format(now), // Use formatted day name
                style: TextStyle(color: Colors.white54),
              ),
            ],
          ),
        ],
      ),
    );
  }

  // –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å (–Ω–µ–æ–º–æ—Ä—Ñ–Ω–∞—è –ø—É—Å—Ç–∞—è –ø–æ–ª–æ—Å–∞ –ø–æ–¥ –±—É–¥—É—â–∏–π –ø–æ–∏—Å–∫/—Ñ–∏–ª—å—Ç—Ä—ã)
  Widget _buildHeaderPanel(BuildContext context) {
    return const NeoCard(
      child: SizedBox(height: 60),
    );
  }

  // –í–µ—Ä—Ö–Ω—è—è –æ—Å–Ω–æ–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å (—Ç–µ–ø–µ—Ä—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –ø—Ä–æ—Ü–µ–¥—É—Ä–∞–º)
  Widget _buildMainTopPanel(BuildContext context, {bool isPortrait = false}) {
    return TreatmentStatsWidget(isPortrait: isPortrait);
  }

  // –ù–∏–∂–Ω—è—è –æ—Å–Ω–æ–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å (–ø–æ–∫–∞ –∫–∞–∫ –∑–∞–≥–ª—É—à–∫–∞, –Ω–æ –≤ –Ω–µ–æ–º–æ—Ä—Ñ–Ω–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ)
  Widget _buildMainBottomPanel(BuildContext context, {bool isPortrait = false}) {
    return const NeoCard(
      child: SizedBox(
        height: 150,
        child: Center(
          child: Text('Main Panel (Bottom)', style: DesignTokens.h4),
        ),
      ),
    );
  }

  // –í–µ—Ä—Ö–Ω—è—è –ø—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å (–∑–∞–≥–ª—É—à–∫–∞)
  Widget _buildRightTopPanel(BuildContext context, {bool isPortrait = false}) {
    return const SizedBox(
      height: 150,
      child: Center(
        child: Text('Right Panel (Top)', style: DesignTokens.h4),
      ),
    );
  }

  // –ù–∏–∂–Ω—è—è –ø—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å ‚Äî —Ç–µ–ø–µ—Ä—å –Ω–∞ Riverpod-–¥–∞–Ω–Ω—ã—Ö (–æ–±–µ—Ä–Ω—ë—Ç—Å—è NeoCard –≤—ã—à–µ)
  Widget _buildRightBottomPanel(BuildContext context, {bool isPortrait = false}) {
    return const PatientCountsWidget();
  }

  Widget _buildMenuItem(IconData? icon, String title, {bool active = false, bool highlight = false}) {
    final color = highlight
        ? Color(0xFFE0A939)
        : active
            ? Colors.white
            : Colors.white70;

    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 6.0),
      child: Row(
        children: [
          if (icon != null) ...[
            Icon(icon, color: color, size: 20),
            SizedBox(width: 12),
          ],
          Text(
            title,
            style: TextStyle(
              color: color,
              fontSize: 14,
              fontWeight: active ? FontWeight.bold : FontWeight.normal,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildActionButton(String title, IconData icon, VoidCallback onPressed) {
    // –ö–Ω–æ–ø–∫–∞ —Å –≥–ª—É–±–æ–∫–∏–º –∏–Ω–¥–∏–≥–æ –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º –∏ –±–µ–ª—ã–º —Ç–µ–∫—Å—Ç–æ–º
    return Container(
      width: double.infinity,
      height: 50, // —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
      decoration: BoxDecoration(
        borderRadius: BorderRadius.circular(12), // —É–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Ä–∞–¥–∏—É—Å –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø–∞–Ω–µ–ª—è–º
        // –ì–ª—É–±–æ–∫–∏–π –∏–Ω–¥–∏–≥–æ –≥—Ä–∞–¥–∏–µ–Ω—Ç
        gradient: LinearGradient(
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
          colors: [
            Color(0xFF5C6BC0), // –°–≤–µ—Ç–ª—ã–π –∏–Ω–¥–∏–≥–æ
            Color(0xFF3949AB), // –ì–ª—É–±–æ–∫–∏–π –∏–Ω–¥–∏–≥–æ (–æ—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç)
            Color(0xFF303F9F), // –¢–µ–º–Ω—ã–π –∏–Ω–¥–∏–≥–æ
          ],
          stops: [0.0, 0.5, 1.0],
        ),
        boxShadow: [
          // –û—Å–Ω–æ–≤–Ω–∞—è —Ç–µ–Ω—å —Å –∏–Ω–¥–∏–≥–æ –æ—Ç—Ç–µ–Ω–∫–æ–º
          BoxShadow(
            color: Color(0xFF303F9F).withOpacity(0.3),
            blurRadius: 8,
            spreadRadius: 0,
            offset: Offset(2, 2),
          ),
          // –°–≤–µ—Ç–ª–∞—è —Ç–µ–Ω—å —Å–≤–µ—Ä—Ö—É –¥–ª—è –æ–±—ä–µ–º–∞
          BoxShadow(
            color: Colors.white.withOpacity(0.1),
            blurRadius: 4,
            spreadRadius: -1,
            offset: Offset(0, -1),
          ),
        ],
        // –ï–¥–∏–Ω–∞—è —Ç–æ–Ω–∫–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å borderRadius
        border: Border.all(
          color: Color(0xFF7986CB).withOpacity(0.7),
          width: 1,
        ),
      ),
      // –î–µ–ª–∏–∫–∞—Ç–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç –±–ª–∏–∫–∞ —Å–≤–µ—Ä—Ö—É
      foregroundDecoration: BoxDecoration(
        borderRadius: BorderRadius.circular(12),
        gradient: LinearGradient(
          begin: Alignment.topCenter,
          end: Alignment.center,
          colors: [
            Colors.white.withOpacity(0.4),
            Colors.white.withOpacity(0.2),
            Colors.transparent,
          ],
          stops: [0.0, 0.3, 0.6],
        ),
      ),
      child: Material(
        color: Colors.transparent,
        child: InkWell(
          borderRadius: BorderRadius.circular(12), // –ó–Ω–∞—á–µ–Ω–∏–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É
          onTap: onPressed,
          child: Padding(
            padding: EdgeInsets.symmetric(horizontal: 20, vertical: 14),
            child: Row(
              mainAxisAlignment: MainAxisAlignment.center,
              children: [
                Icon(
                  icon,
                  color: Colors.white, // –ë–µ–ª—ã–π —Ü–≤–µ—Ç –¥–ª—è –∏–∫–æ–Ω–∫–∏
                  size: 20,
                ),
                SizedBox(width: 12),
                Text(
                  title,
                  style: TextStyle(
                    color: Colors.white, // –ë–µ–ª—ã–π —Ü–≤–µ—Ç –¥–ª—è —Ç–µ–∫—Å—Ç–∞
                    fontSize: 16,
                    fontWeight: FontWeight.bold,
                    letterSpacing: 0.5,
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }
}

// –ö–ª–∞—Å—Å –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö –∫—Ä–∏–≤—ã—Ö –ª–∏–Ω–∏–π
class DecorativeCurvePainter extends CustomPainter {
  @override
  void paint(Canvas canvas, Size size) {
    final paint = Paint()
      ..color = Colors.white.withOpacity(0.1)
      ..style = PaintingStyle.stroke
      ..strokeWidth = 2.0;

    final path1 = Path();
    path1.moveTo(0, size.height * 0.2);
    path1.quadraticBezierTo(
      size.width * 0.5,
      size.height * 0.1,
      size.width,
      size.height * 0.3
    );

    final path2 = Path();
    path2.moveTo(0, size.height * 0.5);
    path2.quadraticBezierTo(
      size.width * 0.7,
      size.height * 0.3,
      size.width,
      size.height * 0.6
    );

    final path3 = Path();
    path3.moveTo(0, size.height * 0.8);
    path3.quadraticBezierTo(
      size.width * 0.3,
      size.height * 0.9,
      size.width,
      size.height * 0.7
    );

    canvas.drawPath(path1, paint);
    canvas.drawPath(path2, paint);
    canvas.drawPath(path3, paint);
  }

  @override
  bool shouldRepaint(CustomPainter oldDelegate) => false;
}
